#bracket
snippet (
	(${1})${2}
#curly bracket
snippet {
	{${1}}${2}
#square bracket
snippet [
	[${1}]${2}

# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument}) {
		${3:// body...}
	}
# Anonymous Function
snippet function
	function(${1}) {
		${2}
	};
# Method of class
snippet method
	/**
	 * ${1: } ${2}
	 * @param {${3}} ${4}
	 * @param {${5}} ${6}
	 */
	${7}.prototype.$1 = function(){

	}
# if
snippet if
	if (${1:true}) {${2}};
# if ... else
snippet ifelse
	if (${1:true}) {${2}}
	else{${3}};
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
# Code Comment
snippet cm
	/**
	 * ${1: }() ${2}
	 * @param {${3}}
	 */
	${4}.prototype.$1 = function(){

	};
#Console long
snippet lg
	console.log(${1});
#Private commen
snippet pr
	/** @private */
#jsdoc comment
snippet jsdoc
	/**
	 * @description ${1}
	 */
#single quot
snippet '
	'${1}'${2}
#double quaot
snippet "
	"${1}"${2}
#dom builder
snippet dombuild
	YK.domBuilder.create({"tag": "${1}","className": "${2}", "append": ${3}});
snippet domevent
	YK.Event.addDomListener(${1}, "${2}", function(e){
		${3}
	});
